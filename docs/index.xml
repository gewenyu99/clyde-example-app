<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clyde Sample App</title>
    <link>http://example.org/clyde-example-app/</link>
    <description>Recent content on Clyde Sample App</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://example.org/clyde-example-app/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Initialize Hugo</title>
      <link>http://example.org/clyde-example-app/docs/quick-start/init/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/clyde-example-app/docs/quick-start/init/</guid>
      <description>{row-divider} Before we begin, install Hugo on your system. =&amp;gt; Hugo Documentation {divider} {row-divider}
Initialize your repo Create a new Hugo site and initialize it as a git repo.
Then, we can add the Clyde theme. {divider}
hugo new site example-site cd example-site git init git submodule add https://github.com/gewenyu99/clyde.git themes/clyde {row-divider}
Configure your Hugo site to use Clyde Copy the toml config on the right into your config.toml file.
We&amp;rsquo;ll cover the details of configuring your site in another section.</description>
    </item>
    
    <item>
      <title>Project Structure</title>
      <link>http://example.org/clyde-example-app/docs/folder-structure/project-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/clyde-example-app/docs/folder-structure/project-structure/</guid>
      <description>{row-divider}
Base Structure Take a look at the base file structure, we&amp;rsquo;ll talk about what each folder does through this section.
Content The content folder is where your content lives. The subfolders like docs and api define subroutes under the site, which will index unique sidebar menu items (we&amp;rsquo;ll talk more about the sidebar later).
Static The static folder is where I recommend you keep stuff like images and other non-markdown material here.</description>
    </item>
    
    <item>
      <title>Single Column</title>
      <link>http://example.org/clyde-example-app/docs/layout/single/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/clyde-example-app/docs/layout/single/</guid>
      <description>This page is a single column page!
It&amp;rsquo;s just standard Markdown
 Python R CLI   print(&amp;#34;Clyde is a name!&amp;#34;)   print(&amp;#34;Clyde is a name!&amp;#34;)   Clyde dislikes commandline interfaces.
  Everything is just in a single column, just specify layout: single-col in the frontmatter.
--- title: &amp;#34;Single Column&amp;#34; weight: 1 draft: false lastmod: 2020-11-5 type: docs layout: single-col --- </description>
    </item>
    
    <item>
      <title>Two Column</title>
      <link>http://example.org/clyde-example-app/docs/layout/two-col/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/clyde-example-app/docs/layout/two-col/</guid>
      <description>{row-divider} This page is in two columns!
It&amp;rsquo;s just standard Markdown with a minor addition.
You&amp;rsquo;ll need to add a { row-divider } in markdown to indicate a new row of content.
You&amp;rsquo;ll need to add a { divider } in markdown to indicate where to split the row.
Clyde will only display content that is properly formatted like this.
If Clyde feels the window is to narrow, it will wrap the page responsively into a single column.</description>
    </item>
    
    <item>
      <title>Configuration</title>
      <link>http://example.org/clyde-example-app/docs/quick-start/config/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/clyde-example-app/docs/quick-start/config/</guid>
      <description>{row-divider}
Base URL The base URL has 2 components.
 http://example.org/ is a generic domain place holder, this shows Hugo where the base domain begins and ends clyde-example-app/ this is where you specify the root route of your app. All relative urls will resolve to clyde-example-app/&amp;lt;hugo routing&amp;gt;/... {divider}  baseURL = &amp;#34;http://example.org/clyde-example-app/&amp;#34; {row-divider}
Color pallet Clyde is themable, you can make clyde match the color scheme of your projects easily. These parameters can be modified under config.</description>
    </item>
    
    <item>
      <title>Section Structure</title>
      <link>http://example.org/clyde-example-app/docs/folder-structure/section-structure/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://example.org/clyde-example-app/docs/folder-structure/section-structure/</guid>
      <description>{row-divider}
Base URL The base URL has 2 components.
 http://example.org/ is a generic domain place holder, this shows Hugo where the base domain begins and ends clyde-example-app/ this is where you specify the root route of your app. All relative urls will resolve to clyde-example-app/&amp;lt;hugo routing&amp;gt;/... {divider}  baseURL = &amp;#34;http://example.org/clyde-example-app/&amp;#34; </description>
    </item>
    
  </channel>
</rss>
